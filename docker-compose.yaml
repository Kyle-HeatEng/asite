networks:
  app-network:
    driver: bridge

services:
  asite:
    image: nginx:alpine
    container_name: asite
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/proxy_params:/etc/nginx/proxy_params
    restart: always
    env_file:
      - .env
    depends_on:
      - events
      - orders
      - statistics
      - transactions
    logging:
      options:
        max-size: '10m'
        max-file: '3'
    networks:
      - app-network

  events:
    image: ghcr.io/kyle-heateng/asite/event-service:latest
    container_name: events
    restart: always
    env_file:
      - .env
    depends_on:
      - mongodb
    ports: 
      - "3000:3000"
    logging:
      options:
        max-size: '10m'
        max-file: '3'
    networks:
      - app-network

  orders:
    image: ghcr.io/kyle-heateng/asite/order-service:latest
    container_name: orders
    restart: always
    env_file:
      - .env
    depends_on:
      - mongodb
      - rabbitmq
    ports: 
      - "3001:3001"
    logging:
      options:
        max-size: '10m'
        max-file: '3'
    networks:
      - app-network

  statistics:
    image: ghcr.io/kyle-heateng/asite/statistic-service:latest
    container_name: statistics
    restart: always
    env_file:
      - .env
    depends_on:
      - mongodb
    ports: 
      - "3004:3004"
    logging:
      options:
        max-size: '10m'
        max-file: '3'
    networks:
      - app-network

  transactions:
    image: ghcr.io/kyle-heateng/asite/transaction-service:latest
    container_name: transactions
    restart: always
    env_file:
      - .env
    depends_on:
      - mongodb
      - rabbitmq
    ports: 
      - "3002:3002"
    logging:
      options:
        max-size: '10m'
        max-file: '3'
    networks:
      - app-network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: always
    ports:
      - "5672:5672"  
      - "15672:15672"
    volumes:
      - rabbitmq:/var/lib/rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
    networks:
      - app-network

  mongodb:
    image: mongo:8
    container_name: mongodb
    volumes:
      - mongo:/data/db
    environment:
      MONGO_INITDB_DATABASE: attachments
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s
    ports:
      - "27017:27017"
    command: "--bind_ip_all --quiet --logpath /dev/null --replSet rs0"
    networks:
      - app-network

  mongo-init:
    image: mongo:8
    container_name: mongo-init
    restart: "no"
    depends_on:
      mongodb:
        condition: service_healthy
    command: >
      mongosh --host mongodb:27017 --eval
      '
      rs.initiate( {
         _id : "rs0",
         members: [
         { _id: 0, host: "mongodb:27017" }
        ]
      })
      '
    networks:
      - app-network

volumes:
  mongo:
  rabbitmq:

